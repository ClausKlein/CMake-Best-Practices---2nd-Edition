name: Sanitizers

on:
  push:
  pull_request:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
    

jobs:
  linux-sanitizers:
    name: linux-sanitizers
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: install-python-3
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: dependencies (debian-like)
        run: |
          sudo apt -y update
          sudo apt -y install ninja-build clang-tidy doxygen plantuml         

      - name: install-python-deps
        run: |
          python3 -m pip install --upgrade pip
          pip3 install conan

      - name: cmake-configure
        run: |
          cmake --preset=ci-ninja-sanitizers

      - name: build
        run: |
          cmake --build ./build 
        shell: bash

      - name: ctest
        run: |
          ctest --test-dir build
        shell: bash
  
  windows-sanitizers:
    name: windows-sanitizers
    runs-on: windows-2022

    steps:
      - uses: actions/checkout@v4

      - name: install-python-3
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Verify long path
        run: |
          Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1
          Get-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled"


      - name: install-python-deps
        run: |
          python3 -m pip install --upgrade pip
          pip3 install conan

      - name: dependencies (windows)
        run: |
          choco install -y --limit-output ninja
          choco install -y --limit-output openssl --version="3.1.1"

      - name: correct-tmp-dir (win)
        run: |
          echo "TEMP=$env:USERPROFILE\AppData\Local\Temp" >> $env:GITHUB_ENV
          echo "TMP=$env:USERPROFILE\AppData\Local\Temp" >> $env:GITHUB_ENV
        shell: pwsh

      - name: cmake-configure
        run: |
          cmake --preset=ci-msvc-22-sanitizer

      - name: build
        run: |
          cmake --build --preset=ci-msvc-debug-sanitizer

      - name: run-msvc-sanitizer
        working-directory: build-sanitizer
        run: |
          "C:\Program Files\CMake\bin\ctest.exe" -V --output-on-failure -C Debug
        shell: cmd